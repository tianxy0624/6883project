[{"/Users/xiaoyutian/CUstudy/blockchain/6883project/src/index.js":"1","/Users/xiaoyutian/CUstudy/blockchain/6883project/src/serviceWorker.js":"2","/Users/xiaoyutian/CUstudy/blockchain/6883project/src/frontend/components/App.js":"3","/Users/xiaoyutian/CUstudy/blockchain/6883project/src/frontend/components/MyTokens.js":"4","/Users/xiaoyutian/CUstudy/blockchain/6883project/src/frontend/components/MyResales.js":"5","/Users/xiaoyutian/CUstudy/blockchain/6883project/src/frontend/components/Home.js":"6","/Users/xiaoyutian/CUstudy/blockchain/6883project/src/frontend/components/MyAccount.js":"7","/Users/xiaoyutian/CUstudy/blockchain/6883project/src/frontend/components/Search.js":"8"},{"size":493,"mtime":1651179870714,"results":"9","hashOfConfig":"10"},{"size":4951,"mtime":1651179870714,"results":"11","hashOfConfig":"10"},{"size":4529,"mtime":1651383279909,"results":"12","hashOfConfig":"10"},{"size":5193,"mtime":1651179870713,"results":"13","hashOfConfig":"10"},{"size":5855,"mtime":1651179870713,"results":"14","hashOfConfig":"10"},{"size":5990,"mtime":1651179870713,"results":"15","hashOfConfig":"10"},{"size":2254,"mtime":1651382994190,"results":"16","hashOfConfig":"10"},{"size":5040,"mtime":1651383025825,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lvwl8g",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},"/Users/xiaoyutian/CUstudy/blockchain/6883project/src/index.js",[],[],"/Users/xiaoyutian/CUstudy/blockchain/6883project/src/serviceWorker.js",[],[],"/Users/xiaoyutian/CUstudy/blockchain/6883project/src/frontend/components/App.js",["45","46"],[],"import {\n  Link,\n  BrowserRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport { useState } from 'react'\nimport { ethers } from \"ethers\"\nimport MusicNFTMarketplaceAbi from '../contractsData/MusicNFTMarketplace.json'\nimport MusicNFTMarketplaceAddress from '../contractsData/MusicNFTMarketplace-address.json'\nimport { Spinner, Navbar, Nav, Button, Container, Form, FormGroup, FormControl } from 'react-bootstrap'\nimport logo from './logo.png'\nimport Home from './Home.js'\nimport MyTokens from './MyTokens.js'\nimport MyResales from './MyResales.js'\nimport MyAccount from './MyAccount.js'\nimport Search from \"./Search.js\";\nimport './App.css';\n\nfunction App() {\n  const [loading, setLoading] = useState(true)\n  const [account, setAccount] = useState(null)\n  const [contract, setContract] = useState({})\n\n  const [searchedSong, setSearchedSong] = useState('')\n\n  const web3Handler = async () => {\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    setAccount(accounts[0])\n    // Get provider from Metamask\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    // Get signer\n    const signer = provider.getSigner()\n    loadContract(signer)\n  }\n  const loadContract = async (signer) => {\n    // Get deployed copy of music nft marketplace contract\n    const contract = new ethers.Contract(MusicNFTMarketplaceAddress.address, MusicNFTMarketplaceAbi.abi, signer)\n    setContract(contract)\n    setLoading(false)\n  }\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <>\n          <Navbar expand=\"lg\" bg=\"secondary\" variant=\"dark\">\n            <Container>\n              <Navbar.Brand>\n                Music NFT player\n              </Navbar.Brand>\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"me-auto\">\n                  <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n                  <Nav.Link as={Link} to=\"/my-tokens\">My Tokens</Nav.Link>\n                  <Nav.Link as={Link} to=\"/my-resales\">My Resales</Nav.Link>\n                  <Nav.Link as={Link} to=\"/my-account\">My Account</Nav.Link>\n                  <Form className=\"d-flex\" >\n                    <FormControl\n                      type=\"search\"\n                      placeholder=\"Search\"\n                      className=\"me-2\"\n                      aria-label=\"Search\"\n                      onChange={(e) => setSearchedSong(e.target.value)}\n                    />\n                    <Button as={Link} to='/search' variant=\"outline-light\" >Search</Button>\n                  </Form>\n                </Nav>\n                <Nav>\n                  {account ? (\n                    <Nav.Link\n                      href={`https://etherscan.io/address/${account}`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"button nav-button btn-sm mx-4\">\n                      <Button variant=\"outline-light\">\n                        {account.slice(0, 5) + '...' + account.slice(38, 42)}\n                      </Button>\n\n                    </Nav.Link>\n                  ) : (\n                    <Button onClick={web3Handler} variant=\"outline-light\">Connect Wallet</Button>\n                  )}\n                </Nav>\n              </Navbar.Collapse>\n            </Container>\n          </Navbar>\n        </>\n        <div>\n          {loading ? (\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '80vh' }}>\n              <Spinner animation=\"border\" style={{ display: 'flex' }} />\n              <p className='mx-3 my-0'>Awaiting Metamask Connection...</p>\n            </div>\n          ) : (\n            <Routes>\n              <Route path=\"/\" element={\n                <Home contract={contract} />\n              } />\n              <Route path=\"/my-tokens\" element={\n                <MyTokens contract={contract} />\n              } />\n              <Route path=\"/my-resales\" element={\n                <MyResales contract={contract} account={account} />\n              } />\n              <Route path=\"/my-account\" element={\n                <MyAccount contract={contract} account={account} />\n              } />\n              <Route path=\"/search\" element={\n                <Search contract={contract} searchedSong={searchedSong.toLowerCase()} />\n              } />\n            </Routes>\n          )}\n        </div>\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;","/Users/xiaoyutian/CUstudy/blockchain/6883project/src/frontend/components/MyTokens.js",[],[],"/Users/xiaoyutian/CUstudy/blockchain/6883project/src/frontend/components/MyResales.js",[],[],"/Users/xiaoyutian/CUstudy/blockchain/6883project/src/frontend/components/Home.js",[],[],"/Users/xiaoyutian/CUstudy/blockchain/6883project/src/frontend/components/MyAccount.js",["47","48","49","50"],[],"/Users/xiaoyutian/CUstudy/blockchain/6883project/src/frontend/components/Search.js",["51","52","53"],[],"import { useState, useEffect, useRef } from 'react'\nimport { ethers } from \"ethers\"\nimport Identicon from 'identicon.js';\nimport { Row, Col, Card, Button, InputGroup, Form } from 'react-bootstrap'\n\nexport default function Search({ contract,searchedSong }) {\n  const audioRefs = useRef([]);\n  const [isPlaying, setIsPlaying] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [selected, setSelected] = useState(0)\n  const [previous, setPrevious] = useState(null)\n  const [marketItems, setMarketItems] = useState(null)\n  const [selectedItems, setSelectedItems] = useState(null)\n  const loadMarketplaceItems = async () => {\n    // Get all unsold items/tokens\n    const results = await contract.getAllUnsoldTokens()\n    const marketItems = await Promise.all(results.map(async i => {\n      // get uri url from contract\n      const uri = await contract.tokenURI(i.tokenId)\n      // use uri to fetch the nft metadata stored on ipfs \n      const response = await fetch(uri + \".json\")\n      const metadata = await response.json()\n      const identicon = `data:image/png;base64,${new Identicon(metadata.name + metadata.price, 330).toString()}`\n      // define item object\n      let item = {\n        price: i.price,\n        itemId: i.tokenId,\n        name: metadata.name,\n        audio: metadata.audio,\n        identicon\n      }\n      return item\n    }))\n      setMarketItems(marketItems)\n      const selectedItems = marketItems.filter(i => (i.name.toLowerCase().includes(searchedSong)))\n      setSelectedItems(selectedItems)\n      setLoading(false)\n  }\n\n//   const searchItem = async() => {\n//       var current_index = 0;\n//       var selectedItems=new Array();\n//       for(var i=0;i<marketItems.length;i++)\n//       {\n//           var lowercaseItemName = marketItems[i].name.toLowerCase();\n//           if (lowercaseItemName.includes(searchedSong)){\n//               selectedItems[current_index] = marketItems[i];\n//               current_index ++;\n//           }\n//       }\n//       setSelectedItems(selectedItems)\n//   }\n\n  const buyMarketItem = async (item) => {\n    await (await contract.buyToken(item.itemId, { value: item.price })).wait()\n    loadMarketplaceItems()\n  }\n  \n  useEffect(() => {\n    if (isPlaying) {\n      audioRefs.current[selected].play()\n      if (selected !== previous) audioRefs.current[previous].pause()\n    } else if (isPlaying !== null) {\n      audioRefs.current[selected].pause()\n    }\n\n  })\n  useEffect(() => {\n    !selectedItems && loadMarketplaceItems()\n  })\n\n  if (loading) return (\n    <main style={{ padding: \"1rem 0\" }}>\n      <h2>Loading...</h2>\n    </main>\n  )\n\n  return (\n    <div className=\"flex justify-center\">\n      {selectedItems.length > 0 ?\n        <div className=\"px-5 container\">\n          <Row xs={1} md={2} lg={4} className=\"g-4 py-5\">\n            {selectedItems.map((item, idx) => (\n              <Col key={idx} className=\"overflow-hidden\">\n                <audio src={item.audio} key={idx} ref={el => audioRefs.current[idx] = el}></audio>\n                <Card>\n                  <Card.Img variant=\"top\" src={item.identicon} />\n                  <Card.Body color=\"secondary\">\n                    <Card.Title>{item.name}</Card.Title>\n                    <div className=\"d-grid px-4\">\n                      <Button variant=\"secondary\" onClick={() => {\n                        setPrevious(selected)\n                        setSelected(idx)\n                        if (!isPlaying || idx === selected) setIsPlaying(!isPlaying)\n                      }}>\n                        {isPlaying && selected === idx ? (\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"23\" height=\"23\" fill=\"currentColor\" className=\"bi bi-pause\" viewBox=\"0 0 16 16\">\n                            <path d=\"M6 3.5a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-1 0V4a.5.5 0 0 1 .5-.5zm4 0a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-1 0V4a.5.5 0 0 1 .5-.5z\" />\n                          </svg>\n                        ) : (\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"23\" height=\"23\" fill=\"currentColor\" className=\"bi bi-play\" viewBox=\"0 0 16 16\">\n                            <path d=\"M10.804 8 5 4.633v6.734L10.804 8zm.792-.696a.802.802 0 0 1 0 1.392l-6.363 3.692C4.713 12.69 4 12.345 4 11.692V4.308c0-.653.713-.998 1.233-.696l6.363 3.692z\" />\n                          </svg>\n                        )}\n                      </Button>\n                    </div>\n                  </Card.Body>\n                  <Card.Footer>\n                  <div className='d-grid my-1'>\n                    <Button onClick={() => buyMarketItem(item)} variant=\"primary\" size=\"lg\">\n                      {`Buy for ${ethers.utils.formatEther(item.price)} ETH`}\n                    </Button>\n                  </div>\n                </Card.Footer>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </div>\n        : (\n          <main style={{ padding: \"1rem 0\" }}>\n            <h2>Sorry! We cannot find what you want</h2>\n          </main>\n        )}\n    </div>\n  );\n}",[],{"ruleId":"54","severity":1,"message":"55","line":11,"column":57,"nodeType":"56","messageId":"57","endLine":11,"endColumn":66},{"ruleId":"54","severity":1,"message":"58","line":12,"column":8,"nodeType":"56","messageId":"57","endLine":12,"endColumn":12},{"ruleId":"54","severity":1,"message":"59","line":1,"column":31,"nodeType":"56","messageId":"57","endLine":1,"endColumn":37},{"ruleId":"54","severity":1,"message":"60","line":3,"column":10,"nodeType":"56","messageId":"57","endLine":3,"endColumn":13},{"ruleId":"54","severity":1,"message":"61","line":3,"column":15,"nodeType":"56","messageId":"57","endLine":3,"endColumn":18},{"ruleId":"62","severity":1,"message":"63","line":32,"column":21,"nodeType":"64","messageId":"65","endLine":32,"endColumn":23},{"ruleId":"54","severity":1,"message":"66","line":4,"column":34,"nodeType":"56","messageId":"57","endLine":4,"endColumn":44},{"ruleId":"54","severity":1,"message":"67","line":4,"column":46,"nodeType":"56","messageId":"57","endLine":4,"endColumn":50},{"ruleId":"54","severity":1,"message":"68","line":12,"column":10,"nodeType":"56","messageId":"57","endLine":12,"endColumn":21},"no-unused-vars","'FormGroup' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'useRef' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'InputGroup' is defined but never used.","'Form' is defined but never used.","'marketItems' is assigned a value but never used."]