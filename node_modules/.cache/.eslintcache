[{"/Users/cengwenxin/Desktop/6883project/src/index.js":"1","/Users/cengwenxin/Desktop/6883project/src/serviceWorker.js":"2","/Users/cengwenxin/Desktop/6883project/src/frontend/components/App.js":"3","/Users/cengwenxin/Desktop/6883project/src/frontend/components/MyResales.js":"4","/Users/cengwenxin/Desktop/6883project/src/frontend/components/MyAccount.js":"5","/Users/cengwenxin/Desktop/6883project/src/frontend/components/Home.js":"6","/Users/cengwenxin/Desktop/6883project/src/frontend/components/MyTokens.js":"7","/Users/cengwenxin/Desktop/6883project/src/frontend/components/Search.js":"8"},{"size":493,"mtime":1651282276192,"results":"9","hashOfConfig":"10"},{"size":4951,"mtime":1651282276193,"results":"11","hashOfConfig":"10"},{"size":4529,"mtime":1651456797299,"results":"12","hashOfConfig":"10"},{"size":6514,"mtime":1651453121697,"results":"13","hashOfConfig":"10"},{"size":2256,"mtime":1651456624091,"results":"14","hashOfConfig":"10"},{"size":6619,"mtime":1651458600316,"results":"15","hashOfConfig":"10"},{"size":5847,"mtime":1651453195123,"results":"16","hashOfConfig":"10"},{"size":5195,"mtime":1651453264003,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dj1s8b",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/cengwenxin/Desktop/6883project/src/index.js",[],[],"/Users/cengwenxin/Desktop/6883project/src/serviceWorker.js",[],[],"/Users/cengwenxin/Desktop/6883project/src/frontend/components/App.js",["44","45"],[],"/Users/cengwenxin/Desktop/6883project/src/frontend/components/MyResales.js",["46"],[],"/Users/cengwenxin/Desktop/6883project/src/frontend/components/MyAccount.js",["47","48","49","50"],[],"/Users/cengwenxin/Desktop/6883project/src/frontend/components/Home.js",["51"],[],"/Users/cengwenxin/Desktop/6883project/src/frontend/components/MyTokens.js",["52"],[],"import { useState, useEffect, useRef } from 'react'\nimport { ethers } from \"ethers\"\nimport Identicon from 'identicon.js';\nimport { Row, Col, Card, Button, InputGroup, Form } from 'react-bootstrap'\n\nexport default function MyTokens({ contract }) {\n  const audioRefs = useRef([]);\n  const [isPlaying, setIsPlaying] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [myTokens, setMyTokens] = useState(null)\n  const [selected, setSelected] = useState(0)\n  const [previous, setPrevious] = useState(null)\n  const [resellId, setResellId] = useState(null)\n  const [resellPrice, setResellPrice] = useState(null)\n  const loadMyTokens = async () => {\n    // Get all unsold items/tokens\n    const results = await contract.getMyTokens()\n    const myTokens = await Promise.all(results.map(async i => {\n      if (i.tokenId != 3){\n      // get uri url from contract\n      const uri = await contract.tokenURI(i.tokenId)\n      // use uri to fetch the nft metadata stored on ipfs \n      const response = await fetch(uri + \".json\")\n      const metadata = await response.json()\n      const identicon = `data:image/png;base64,${new Identicon(metadata.name + metadata.price, 330).toString()}`\n      // define item object\n      let item = {\n        price: i.price,\n        itemId: i.tokenId,\n        name: metadata.name,\n        audio: metadata.audio,\n        identicon,\n        resellPrice: null\n      }\n      return item\n      }\n      else{\n      // get uri url from contract\n      const uri = await contract.tokenURI(i.tokenId)\n      // use uri to fetch the nft metadata stored on ipfs \n      const response = await fetch(uri + \".json\")\n      const metadata = await response.json()\n      const identicon = `data:image/png;base64,${new Identicon(metadata.name + 'cold' +metadata.price, 330).toString()}`\n      // define item object\n      let item = {\n        price: i.price,\n        itemId: i.tokenId,\n        name: metadata.name,\n        audio: metadata.audio,\n        identicon,\n        resellPrice: null\n      }\n      return item\n      }\n      \n    }))\n    setMyTokens(myTokens)\n    setLoading(false)\n  }\n  const resellItem = async (item) => {\n    if (resellPrice === \"0\" || item.itemId !== resellId || !resellPrice) return\n    // Get royalty fee\n    const fee = await contract.royaltyFee()\n    const price = ethers.utils.parseEther(resellPrice.toString())\n    await (await contract.resellToken(item.itemId, price, { value: fee })).wait()\n    loadMyTokens()\n  }\n  useEffect(() => {\n    if (isPlaying) {\n      audioRefs.current[selected].play()\n      if (selected !== previous) audioRefs.current[previous].pause()\n    } else if (isPlaying !== null) {\n      audioRefs.current[selected].pause()\n    }\n\n  })\n  useEffect(() => {\n    !myTokens && loadMyTokens()\n  })\n\n  if (loading) return (\n    <main style={{ padding: \"1rem 0\" }}>\n      <h2>Loading...</h2>\n    </main>\n  )\n\n  return (\n    <div className=\"flex justify-center\">\n      {myTokens.length > 0 ?\n        <div className=\"px-5 container\">\n          <Row xs={1} md={2} lg={4} className=\"g-4 py-5\">\n            {myTokens.map((item, idx) => (\n              <Col key={idx} className=\"overflow-hidden\">\n                <audio src={item.audio} key={idx} ref={el => audioRefs.current[idx] = el}></audio>\n                <Card>\n                  <Card.Img variant=\"top\" src={item.identicon} />\n                  <Card.Body color=\"secondary\">\n                    <Card.Title>{item.name}</Card.Title>\n                    <div className=\"d-grid px-4\">\n                      <Button variant=\"secondary\" onClick={() => {\n                        setPrevious(selected)\n                        setSelected(idx)\n                        if (!isPlaying || idx === selected) setIsPlaying(!isPlaying)\n                      }}>\n                        {isPlaying && selected === idx ? (\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"23\" height=\"23\" fill=\"currentColor\" className=\"bi bi-pause\" viewBox=\"0 0 16 16\">\n                            <path d=\"M6 3.5a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-1 0V4a.5.5 0 0 1 .5-.5zm4 0a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-1 0V4a.5.5 0 0 1 .5-.5z\" />\n                          </svg>\n                        ) : (\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"23\" height=\"23\" fill=\"currentColor\" className=\"bi bi-play\" viewBox=\"0 0 16 16\">\n                            <path d=\"M10.804 8 5 4.633v6.734L10.804 8zm.792-.696a.802.802 0 0 1 0 1.392l-6.363 3.692C4.713 12.69 4 12.345 4 11.692V4.308c0-.653.713-.998 1.233-.696l6.363 3.692z\" />\n                          </svg>\n                        )}\n                      </Button>\n                    </div>\n                    <Card.Text className=\"mt-1\">\n                      {ethers.utils.formatEther(item.price)} ETH\n                    </Card.Text>\n                  </Card.Body>\n                  <Card.Footer>\n                    <InputGroup className=\"my-1\">\n                      <Button onClick={() => resellItem(item)} variant=\"outline-primary\" id=\"button-addon1\">\n                        Resell\n                      </Button>\n                      <Form.Control\n                        onChange={(e) => {\n                          setResellId(item.itemId)\n                          setResellPrice(e.target.value)\n                        }}\n                        size=\"md\"\n                        value={resellId === item.itemId ? resellPrice : ''}\n                        required type=\"number\"\n                        placeholder=\"Price in ETH\"\n                      />\n                    </InputGroup>\n                  </Card.Footer>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </div>\n        : (\n          <main style={{ padding: \"1rem 0\" }}>\n            <h2>No owned tokens</h2>\n          </main>\n        )}\n    </div>\n  );\n}",["53","54"],"/Users/cengwenxin/Desktop/6883project/src/frontend/components/Search.js",["55","56","57","58"],[],{"ruleId":"59","severity":1,"message":"60","line":11,"column":57,"nodeType":"61","messageId":"62","endLine":11,"endColumn":66},{"ruleId":"59","severity":1,"message":"63","line":12,"column":8,"nodeType":"61","messageId":"62","endLine":12,"endColumn":12},{"ruleId":"64","severity":1,"message":"65","line":22,"column":21,"nodeType":"66","messageId":"67","endLine":22,"endColumn":23},{"ruleId":"59","severity":1,"message":"68","line":1,"column":31,"nodeType":"61","messageId":"62","endLine":1,"endColumn":37},{"ruleId":"59","severity":1,"message":"69","line":3,"column":10,"nodeType":"61","messageId":"62","endLine":3,"endColumn":13},{"ruleId":"59","severity":1,"message":"70","line":3,"column":15,"nodeType":"61","messageId":"62","endLine":3,"endColumn":18},{"ruleId":"64","severity":1,"message":"71","line":32,"column":21,"nodeType":"66","messageId":"67","endLine":32,"endColumn":23},{"ruleId":"64","severity":1,"message":"65","line":16,"column":20,"nodeType":"66","messageId":"67","endLine":16,"endColumn":22},{"ruleId":"64","severity":1,"message":"65","line":19,"column":21,"nodeType":"66","messageId":"67","endLine":19,"endColumn":23},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"59","severity":1,"message":"76","line":4,"column":34,"nodeType":"61","messageId":"62","endLine":4,"endColumn":44},{"ruleId":"59","severity":1,"message":"77","line":4,"column":46,"nodeType":"61","messageId":"62","endLine":4,"endColumn":50},{"ruleId":"59","severity":1,"message":"78","line":12,"column":10,"nodeType":"61","messageId":"62","endLine":12,"endColumn":21},{"ruleId":"64","severity":1,"message":"65","line":18,"column":21,"nodeType":"66","messageId":"67","endLine":18,"endColumn":23},"no-unused-vars","'FormGroup' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useRef' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","Expected '===' and instead saw '=='.","no-native-reassign",["79"],"no-negated-in-lhs",["80"],"'InputGroup' is defined but never used.","'Form' is defined but never used.","'marketItems' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]